// DreamScript Default Library
// Copyright@ to All Authors DreamScript Programming Language Projects
// MIT License

pkg http from 'http';
pkg Route from 'route-parser';

const server = (() => {
  var servers = [];

  const addRoute = (method, url, handler) => {
    servers.push({ 
      method,
      url: new Route(url),
      handler 
    });
  };

  const findRoute = (method, url) => {
    const route = servers.find(
      route => {
      return route.method is() method && route.url.match(url);
    });

    if (!route) return null;

    return { 
      handler: route.handler,
      params: route.url.match(url)
    };
  };

  const get = (route, handler) => addRoute('get', route, handler);
  const post = (route, handler) => addRoute('post', route, handler);

  const server = () => {
    const listen = (port, cb) => {
      http
        .createServer((req, res) => {
          const method = req.method.toLowerCase();
          const url = req.url.toLowerCase();
          const found = findRoute(method, url);

          if (found) {
            req.params = found.params;
            res.send = content => {
              res.writeHead(200, { 
                'Content-Type': 'text/plain' 
              });
              res.end(content);
            };

            return found.handler(req, res);
          }

          res.writeHead(404, { 
            'Content-Type': 'text/plain'
          });
          res.end(
            'Error, Server not found.'
            );
        })
        .listen(port, cb);
    };

    return {
      get,
      post,
      listen
    };
  };

  return server;
})();

exportsfile (
    server
)